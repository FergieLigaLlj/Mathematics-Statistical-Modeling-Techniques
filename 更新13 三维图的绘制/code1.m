%% mesh函数：绘制出在某一区间内完整的网格图
%% mesh(X,Y,Z)的用法，其中X是n维向量,Y是m维向量，Z是m*n维的矩阵
X = [1,2,4]
Y = [3,5]
Z = [4,8,10;5,9,13]
mesh(X,Y,Z)  % (X(j), Y(i), Z(i,j))是线框网格线的交点的坐标
xlabel('x轴');  ylabel('y轴');  zlabel('z轴');  % 加上坐标轴的标签
% 三维旋转和数据游标的使用，以及X-Y视图的切换（在三维旋转状态下点击鼠标右键）
% 数据游标默认只能添加一个，按住Alt键不动，可以添加多个数据游标
% 插入颜色栏，可显示色阶


%% mesh(Z)的用法，其中Z是m*n维的矩阵
Z = [4,8,10;5,9,13]
mesh(Z)
xlabel('x轴');  ylabel('y轴');  zlabel('z轴');  % 加上坐标轴的标签
% 等价于
X = 1:3
Y = 1:2
Z = [4,8,10;5,9,13]
mesh(X,Y,Z)
xlabel('x轴');  ylabel('y轴');  zlabel('z轴');  % 加上坐标轴的标签

%% 思考：如果X中元素不是按照从小到大排序的，图像会是什么样子？
X = [1,10,4]
Y = [3,5]
Z = [4,8,10;5,9,13]
mesh(X,Y,Z)
hidden off  % 可以看到背部的图像，不会遮挡（默认是看不到的）
xlabel('x轴');  ylabel('y轴');  zlabel('z轴');  % 加上坐标轴的标签
% 如果觉得背部的图像显示的颜色太深了，可以更改透明度
mesh(X,Y,Z)
alpha(0.8)  % 设置透明度为0.8，这时候隐隐约约能看到（透明度介于0-1之间，越大表示越透明）
xlabel('x轴');  ylabel('y轴');  zlabel('z轴');  % 加上坐标轴的标签

%%  mesh(X,Y,Z)的用法，其中X、Y和Z都是m*n维的矩阵
X = [1,2,4;1,2,4]   
%  X = [1,2,4;1,2,5] 
Y = [3,3,3;5,5,5]
Z = [4,8,10;5,9,13]
mesh(X,Y,Z) % (X(i,j), Y(i,j), Z(i,j))是线框网格线的交点的坐标
xlabel('x轴');  ylabel('y轴');  zlabel('z轴');  % 加上坐标轴的标签

%% 例题1：绘制 z = x^2 - y^2的图像 ，其中x和y都位于[0,5]之间
% linspace是Matlab中的一个函数，用于产生给定范围内指定数量的点数，相邻数据跨度相同，并返回一个行向量。
% 调用方法：linspace(x1,x2,N)
% 功能：用于产生x1，x2之间的N点行向量，相邻数据跨度相同。其中x1、x2、N分别为起始值、终止值、元素个数。
n = 11;
tem = linspace(0,5,n);  % 将[0,5]这个区间等分为n个点（等差数列的形式）
x = repmat(tem,n,1);
y = repmat(tem',1,n);
z = x.^2 - y.^2;    % 要使用点运算符号哦~
mesh(x,y,z)
xlabel('x轴');  ylabel('y轴');  zlabel('z轴');  % 加上坐标轴的标签
axis vis3d % 冻结屏幕高宽比，使得一个三维对象的旋转不会改变坐标轴的刻度显示

%% 例题2： 绘制 z = sin(sqrt(x^2+y^2))/sqrt(x^2+y^2) 的图形，其中x和y都位于[-5,5]之间
[x,y] = meshgrid(-5:0.5:5);  % 快速生成网格所需的数据
tem = sqrt(x.^2+y.^2)+1e-12;   % tem=sqrt(x.^2+y.^2);   % 在后面加上一个非常非常小的数字： 1e-12 = 10^(-12) ,当然你也可以单独找到值为0的地方对其修改
z = sin(tem)./tem;  % 如果不对tem处理，那么z的最中间的一个值 0/0 = NaN
mesh(x,y,z)
xlabel('x轴');  ylabel('y轴');  zlabel('z轴');  % 加上坐标轴的标签
axis vis3d % 冻结屏幕高宽比，使得一个三维对象的旋转不会改变坐标轴的刻度显示

%% meshc函数：除了mesh函数图形外，还在xy平面上绘制曲面的等高线
meshc(x,y,z)
xlabel('x轴');  ylabel('y轴');  zlabel('z轴');  % 加上坐标轴的标签
axis vis3d % 冻结屏幕高宽比，使得一个三维对象的旋转不会改变坐标轴的刻度显示

%% meshz函数：除了mesh函数图形外，还在xy平面上绘制曲面的底座
meshz(x,y,z)
xlabel('x轴');  ylabel('y轴');  zlabel('z轴');  % 加上坐标轴的标签
axis vis3d % 冻结屏幕高宽比，使得一个三维对象的旋转不会改变坐标轴的刻度显示


% % 注意：代码文件仅供参考，一定不要直接用于自己的数模论文中
% % 国赛对于论文的查重要求非常严格，代码雷同也算作抄袭
% % 视频中提到的附件可在售后群（购买后收到的那个无忧自动发货的短信中有加入方式）的群文件中下载。包括讲义、代码、我视频中推荐的资料等。
% % 关注我的微信公众号《数学建模学习交流》，后台发送“软件”两个字，可获得常见的建模软件下载方法；发送“数据”两个字，可获得建模数据的获取方法；发送“画图”两个字，可获得数学建模中常见的画图方法。另外，也可以看看公众号的历史文章，里面发布的都是对大家有帮助的技巧。
% % 购买更多优质精选的数学建模资料，可关注我的微信公众号《数学建模学习交流》，在后台发送“买”这个字即可进入店铺(我的微店地址：https://weidian.com/?userid=1372657210)进行购买。
% % 视频价格不贵，但价值很高。单人购买观看只需要58元，三人购买人均仅需46元，视频本身也是下载到本地观看的，所以请大家不要侵犯知识产权，对视频或者资料进行二次销售。
% % 如何修改代码避免查重的方法：https://www.bilibili.com/video/av59423231（必看）